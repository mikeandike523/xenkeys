var k=Object.defineProperty;var M=(o,t,s)=>t in o?k(o,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[t]=s;var r=(o,t,s)=>M(o,typeof t!="symbol"?t+"":t,s);var S=(o,t,s)=>Math.max(t,Math.min(s,o));function c(o,t){return Math.max(1,Math.floor(Math.max(0,o)*t))}function p(o,t){let s=Math.sin(2*Math.PI*o);return Math.pow(Math.abs(s),t)*Math.sign(s)}var m=class{constructor(t){r(this,"sr");r(this,"_freq",440);r(this,"_samples",0);r(this,"_state","idle");r(this,"envSamples",0);r(this,"attackSamples",0);r(this,"decaySamples",0);r(this,"releaseSamples",0);r(this,"sustainLevel",0);r(this,"noteId",0);r(this,"waveform","sine");this.sr=t}get state(){return this._state}noteOn(t,s,e){this._freq=t,this.noteId=s,this._state="attack",this.envSamples=0,this._samples=0,this.attackSamples=c(e.attack,this.sr),this.decaySamples=c(e.decay,this.sr),this.releaseSamples=c(e.release,this.sr),this.sustainLevel=S(e.sustain,0,1)}noteOff(t){this._state!=="idle"&&this.noteId===t&&this._state!=="release"&&(this._state="release",this.envSamples=0)}forceRelease(){this._state!=="idle"&&(this._state="release",this.envSamples=0)}setWaveform(t){this.waveform=t}process(){let t=0;switch(this._state){case"attack":{t=this.envSamples/this.attackSamples,this.envSamples++>=this.attackSamples&&(this._state="decay",this.envSamples=0);break}case"decay":{let i=this.envSamples/this.decaySamples;t=1+(this.sustainLevel-1)*i,this.envSamples++>=this.decaySamples&&(this._state="sustain",this.envSamples=0);break}case"sustain":{t=this.sustainLevel;break}case"release":{let i=this.envSamples/this.releaseSamples;if(t=this.sustainLevel*(1-i),this.envSamples++>=this.releaseSamples)return this._state="idle",this.envSamples=0,this.noteId=0,0;break}default:return 0}let s=this._samples*this._freq/this.sr,e=s-Math.floor(s),a;switch(this.waveform){case"square":a=e<.5?1:-1;break;case"triangle":a=1-4*Math.abs(e-.5);break;case"sawtooth":a=2*e-1;break;case"power2":a=p(e,2);break;case"power3":a=p(e,3);break;case"power4":a=p(e,4);break;case"selfmod0.1":a=Math.sin(2*Math.PI*e+.1*2*Math.PI*Math.sin(2*Math.PI*e));break;case"selfmod0.2":a=Math.sin(2*Math.PI*e+.2*2*Math.PI*Math.sin(2*Math.PI*e));break;case"selfmod0.3":a=Math.sin(2*Math.PI*e+.3*2*Math.PI*Math.sin(2*Math.PI*e));break;case"sine":default:a=Math.sin(2*Math.PI*e);break}return this._samples++,a*t}},y={attack:.01,decay:.1,sustain:.7,release:.5},v=class extends AudioWorkletProcessor{constructor(){super();r(this,"voices",[]);r(this,"baseEnvelope",{...y});r(this,"waveform","sine");this.resizeVoices(16),this.port.onmessage=s=>{let e=s.data;switch(e.type){case"noteOn":{let a={attack:e.data.envelope?.attack??this.baseEnvelope.attack,decay:e.data.envelope?.decay??this.baseEnvelope.decay,sustain:e.data.envelope?.sustain??this.baseEnvelope.sustain,release:e.data.envelope?.release??this.baseEnvelope.release},i=this.findFreeOrSteal();i.setWaveform(this.waveform),i.noteOn(e.data.freq,e.data.id,a);break}case"noteOff":{let{id:a}=e.data;this.voices.forEach(i=>i.noteOff(a));break}case"waveform":{this.waveform=e.data,this.voices.forEach(a=>a.setWaveform(this.waveform));break}case"setEnvelope":{this.baseEnvelope={attack:e.data.attack??this.baseEnvelope.attack,decay:e.data.decay??this.baseEnvelope.decay,sustain:e.data.sustain??this.baseEnvelope.sustain,release:e.data.release??this.baseEnvelope.release};break}case"allNotesOff":{this.voices.forEach(a=>a.forceRelease());break}case"setPolyphony":{let a=Math.max(1,Math.floor(e.data.voices));this.resizeVoices(a);break}}}}static get parameterDescriptors(){return[{name:"volume",defaultValue:.8,minValue:0,maxValue:1,automationRate:"a-rate"}]}resizeVoices(s){if(s!==this.voices.length){if(s>this.voices.length){let e=s-this.voices.length;for(let a=0;a<e;a++)this.voices.push(new m(sampleRate))}else{for(let e=s;e<this.voices.length;e++)this.voices[e].forceRelease();this.voices.length=s}this.voices.forEach(e=>e.setWaveform(this.waveform))}}findFreeOrSteal(){let s=this.voices.find(e=>e.state==="idle");return s||this.voices[0]}process(s,e,a){let i=e[0];if(!i||i.length===0)return!0;let u=i[0].length;for(let n=1;n<i.length;n++)if(i[n].length!==u)throw new Error("All outputs must have the same length");let l=a.volume;for(let n=0;n<u;n++){let f=0;for(let h=0;h<this.voices.length;h++)f+=this.voices[h].process();let d=l.length>1?l[n]:l[0],b=f*d*.25;for(let h=0;h<i.length;h++)i[h][n]=b}return!0}};registerProcessor("pitch-synth",v);
//# sourceMappingURL=pitch-synth.worklet.js.map
