var _=Object.defineProperty;var w=(a,e,s)=>e in a?_(a,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[e]=s;var o=(a,e,s)=>w(a,typeof e!="symbol"?e+"":e,s);var d=50,b=1,k=6,y=(a,e,s)=>Math.max(e,Math.min(s,a));function m(a,e){return Math.max(1,Math.floor(Math.max(0,a)*e))}function v(a,e){let s=Math.sin(2*Math.PI*a);return Math.pow(Math.abs(s),e)*Math.sign(s)}function M(a,e){switch(a){case"square":return e<.5?1:-1;case"triangle":return 1-4*Math.abs(e-.5);case"sawtooth":return 2*e-1;case"power2":return v(e,2);case"power3":return v(e,3);case"power4":return v(e,4);case"selfmod0.1":return Math.sin(2*Math.PI*e+.1*2*Math.PI*Math.sin(2*Math.PI*e));case"selfmod0.2":return Math.sin(2*Math.PI*e+.2*2*Math.PI*Math.sin(2*Math.PI*e));case"selfmod0.3":return Math.sin(2*Math.PI*e+.3*2*Math.PI*Math.sin(2*Math.PI*e));case"sine":default:return Math.sin(2*Math.PI*e)}}function S(a,e,s){let t=Math.max(1,Math.floor(e))*Math.max(1,Math.floor(s)),r=0;for(let i=0;i<t;i++){let n=i/e%1,h=M(a,n);r+=h*h}return Math.sqrt(r/t)}var P=["sine","square","triangle","sawtooth","power2","power3","power4","selfmod0.1","selfmod0.2","selfmod0.3"],I="triangle",W=S(I,d,b),A=(()=>{let a={};for(let e of P){let s=S(e,d,b);a[e]=s>0?W/s:1}return a})(),u=class{constructor(e){o(this,"sr");o(this,"_freq",440);o(this,"_samples",0);o(this,"_state","idle");o(this,"envSamples",0);o(this,"attackSamples",0);o(this,"decaySamples",0);o(this,"releaseSamples",0);o(this,"sustainLevel",0);o(this,"noteId",0);o(this,"waveform","sine");this.sr=e}get state(){return this._state}noteOn(e,s,t){this._freq=e,this.noteId=s,this._state="attack",this.envSamples=0,this._samples=0,this.attackSamples=m(t.attack,this.sr),this.decaySamples=m(t.decay,this.sr),this.releaseSamples=m(t.release,this.sr),this.sustainLevel=y(t.sustain,0,1)}noteOff(e){this._state!=="idle"&&this.noteId===e&&this._state!=="release"&&(this._state="release",this.envSamples=0)}forceRelease(){this._state!=="idle"&&(this._state="release",this.envSamples=0)}setWaveform(e){this.waveform=e}process(){let e=0;switch(this._state){case"attack":{e=this.envSamples/this.attackSamples,this.envSamples++>=this.attackSamples&&(this._state="decay",this.envSamples=0);break}case"decay":{let n=this.envSamples/this.decaySamples;e=1+(this.sustainLevel-1)*n,this.envSamples++>=this.decaySamples&&(this._state="sustain",this.envSamples=0);break}case"sustain":{e=this.sustainLevel;break}case"release":{let n=this.envSamples/this.releaseSamples;if(e=this.sustainLevel*(1-n),this.envSamples++>=this.releaseSamples)return this._state="idle",this.envSamples=0,this.noteId=0,0;break}default:return 0}let s=this._samples*this._freq/this.sr,t=s-Math.floor(s),r=M(this.waveform,t),i=A[this.waveform]??1;return r*=i,this._samples++,r*e}},O={attack:.01,decay:.1,sustain:.7,release:.5},p=class extends AudioWorkletProcessor{constructor(){super();o(this,"voices",[]);o(this,"baseEnvelope",{...O});o(this,"waveform","sine");this.resizeVoices(16),this.port.onmessage=s=>{let t=s.data;switch(t.type){case"noteOn":{let r={attack:t.data.envelope?.attack??this.baseEnvelope.attack,decay:t.data.envelope?.decay??this.baseEnvelope.decay,sustain:t.data.envelope?.sustain??this.baseEnvelope.sustain,release:t.data.envelope?.release??this.baseEnvelope.release},i=this.findFreeOrSteal();i.setWaveform(this.waveform),i.noteOn(t.data.freq,t.data.id,r);break}case"noteOff":{let{id:r}=t.data;this.voices.forEach(i=>i.noteOff(r));break}case"waveform":{this.waveform=t.data,this.voices.forEach(r=>r.setWaveform(this.waveform));break}case"setEnvelope":{this.baseEnvelope={attack:t.data.attack??this.baseEnvelope.attack,decay:t.data.decay??this.baseEnvelope.decay,sustain:t.data.sustain??this.baseEnvelope.sustain,release:t.data.release??this.baseEnvelope.release};break}case"allNotesOff":{this.voices.forEach(r=>r.forceRelease());break}case"setPolyphony":{let r=Math.max(1,Math.floor(t.data.voices));this.resizeVoices(r);break}}}}static get parameterDescriptors(){return[{name:"volume",defaultValue:.8,minValue:0,maxValue:1,automationRate:"a-rate"}]}resizeVoices(s){if(s!==this.voices.length){if(s>this.voices.length){let t=s-this.voices.length;for(let r=0;r<t;r++)this.voices.push(new u(sampleRate))}else{for(let t=s;t<this.voices.length;t++)this.voices[t].forceRelease();this.voices.length=s}this.voices.forEach(t=>t.setWaveform(this.waveform))}}findFreeOrSteal(){let s=this.voices.find(t=>t.state==="idle");return s||this.voices[0]}process(s,t,r){let i=t[0];if(!i||i.length===0)return!0;let n=i[0].length;for(let l=1;l<i.length;l++)if(i[l].length!==n)throw new Error("All outputs must have the same length");let h=r.volume;for(let l=0;l<n;l++){let f=0;for(let c=0;c<this.voices.length;c++)f+=this.voices[c].process();let E=h.length>1?h[l]:h[0],g=f*E*(1/k);for(let c=0;c<i.length;c++)i[c][l]=g}return!0}};registerProcessor("pitch-synth",p);
//# sourceMappingURL=pitch-synth.worklet.js.map
